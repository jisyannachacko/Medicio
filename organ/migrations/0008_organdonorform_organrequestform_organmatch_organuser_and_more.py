# Generated by Django 5.2 on 2025-04-17 15:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('organ', '0007_alter_organ_donor_form_id_card'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrganDonorForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('middle_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('father_name', models.CharField(max_length=30)),
                ('mother_name', models.CharField(max_length=30)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=30)),
                ('district', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=30)),
                ('pincode', models.CharField(max_length=8)),
                ('date_of_birth', models.DateField()),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('occupation', models.CharField(max_length=50)),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('id_card', models.FileField(upload_to='donor_id_cards/')),
                ('emergency_contact_name', models.CharField(max_length=30)),
                ('emergency_contact_phone', models.CharField(max_length=15)),
                ('emergency_contact_address', models.TextField()),
                ('organ', models.CharField(choices=[('kidney', 'Kidney'), ('liver', 'Liver')], max_length=10)),
                ('medical_history', models.TextField(blank=True)),
                ('is_live_donor', models.BooleanField(default=True)),
                ('status', models.IntegerField(choices=[(0, 'Pending Review'), (1, 'Approved'), (2, 'Rejected'), (3, 'Matched'), (4, 'Donated')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganRequestForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_first_name', models.CharField(max_length=30)),
                ('patient_middle_name', models.CharField(blank=True, max_length=30)),
                ('patient_last_name', models.CharField(max_length=30)),
                ('age', models.PositiveIntegerField()),
                ('blood_group', models.CharField(max_length=3)),
                ('organ_needed', models.CharField(choices=[('kidney', 'Kidney'), ('liver', 'Liver')], max_length=10)),
                ('medical_condition', models.TextField()),
                ('doctor_name', models.CharField(max_length=100)),
                ('hospital_name', models.CharField(max_length=100)),
                ('hospital_address', models.TextField()),
                ('medical_report', models.FileField(upload_to='medical_reports/')),
                ('urgency_level', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Critical')])),
                ('additional_notes', models.TextField(blank=True)),
                ('status', models.IntegerField(choices=[(0, 'Pending Review'), (1, 'Approved'), (2, 'Rejected'), (3, 'Matched'), (4, 'Received')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matched_date', models.DateTimeField(auto_now_add=True)),
                ('transplant_date', models.DateTimeField(blank=True, null=True)),
                ('hospital', models.CharField(blank=True, max_length=100)),
                ('doctor', models.CharField(blank=True, max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'In Process'), (2, 'Completed'), (3, 'Failed')], default=0)),
                ('notes', models.TextField(blank=True)),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donor_matches', to='organ.organdonorform')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipient_matches', to='organ.organrequestform')),
            ],
            options={
                'verbose_name_plural': 'Organ Matches',
            },
        ),
        migrations.CreateModel(
            name='OrganUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('role', models.CharField(choices=[('donor', 'Donor'), ('recipient', 'Recipient'), ('both', 'Both')], default='both', max_length=10)),
                ('blood_group', models.CharField(blank=True, max_length=3)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='organuser_set', related_query_name='organuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='organuser_set', related_query_name='organuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='organrequestform',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_forms', to='organ.organuser'),
        ),
        migrations.AddField(
            model_name='organdonorform',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donor_forms', to='organ.organuser'),
        ),
        migrations.DeleteModel(
            name='Organ_Donor_Form',
        ),
        migrations.DeleteModel(
            name='Organ_Users',
        ),
    ]
