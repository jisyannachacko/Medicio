# Generated by Django 5.2 on 2025-04-18 03:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hospital', '0001_initial'),
        ('organ', '0008_organdonorform_organrequestform_organmatch_organuser_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organ_Types',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Organ_Name', models.CharField(max_length=30)),
                ('Description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organ_Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Full_Name', models.CharField(max_length=30)),
                ('E_mail', models.CharField(max_length=50)),
                ('PH_number', models.CharField(max_length=30)),
                ('Password', models.CharField(max_length=30)),
            ],
        ),
        migrations.RemoveField(
            model_name='organmatch',
            name='donor',
        ),
        migrations.RemoveField(
            model_name='organmatch',
            name='recipient',
        ),
        migrations.RemoveField(
            model_name='organrequestform',
            name='user',
        ),
        migrations.RemoveField(
            model_name='organuser',
            name='groups',
        ),
        migrations.RemoveField(
            model_name='organuser',
            name='user_permissions',
        ),
        migrations.CreateModel(
            name='Organ_Donor_Register',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('First_Name', models.CharField(max_length=30)),
                ('Last_Name', models.CharField(max_length=30)),
                ('Age', models.PositiveIntegerField()),
                ('Date_Of_Birth', models.CharField(max_length=10)),
                ('Gender', models.CharField(max_length=10)),
                ('Address', models.CharField(max_length=1024)),
                ('PinCode', models.CharField(max_length=8)),
                ('District', models.CharField(max_length=30, null=True)),
                ('Hospital', models.CharField(max_length=80, null=True)),
                ('State', models.CharField(max_length=15)),
                ('Weight', models.FloatField(max_length=6)),
                ('Height', models.FloatField(max_length=6, null=True)),
                ('Blood_Type', models.CharField(max_length=3)),
                ('Diabetic', models.CharField(max_length=5)),
                ('HIV', models.CharField(max_length=5)),
                ('Hepatitis', models.CharField(max_length=5, null=True)),
                ('Hypertension', models.CharField(max_length=5, null=True)),
                ('Cancer_History', models.CharField(max_length=5, null=True)),
                ('Medicine', models.CharField(max_length=5)),
                ('Medicine_Name', models.CharField(max_length=30, null=True)),
                ('Disease', models.CharField(max_length=5)),
                ('Disease_Name', models.CharField(max_length=30, null=True)),
                ('Surgery', models.CharField(max_length=5)),
                ('Surgery_Name', models.CharField(max_length=30, null=True)),
                ('Donation_Type', models.CharField(choices=[('living', 'Living Donor'), ('deceased', 'Deceased Donor')], max_length=20)),
                ('Emergency_Contact_Name', models.CharField(max_length=50)),
                ('Emergency_Contact_Number', models.CharField(max_length=15)),
                ('Family_Consent', models.BooleanField(default=False)),
                ('status', models.CharField(default='pending', max_length=10)),
                ('Organs_Donated', models.ManyToManyField(related_name='donors', to='organ.organ_types')),
            ],
        ),
        migrations.CreateModel(
            name='OrganInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_type', models.CharField(max_length=3)),
                ('availability_status', models.CharField(choices=[('available', 'Available'), ('matched', 'Matched'), ('transplanted', 'Transplanted')], max_length=20)),
                ('preservation_date', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('donor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='organ.organ_donor_register')),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.hospital_users')),
                ('organ_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organ.organ_types')),
            ],
        ),
        migrations.CreateModel(
            name='OrganRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('blood_type', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=3)),
                ('urgency_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('medical_documents', models.FileField(upload_to='organ_request_docs/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('hospital', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.hospital_users')),
                ('organ_needed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organ.organ_types')),
            ],
            options={
                'unique_together': {('hospital', 'patient_name', 'organ_needed')},
            },
        ),
        migrations.DeleteModel(
            name='OrganDonorForm',
        ),
        migrations.DeleteModel(
            name='OrganMatch',
        ),
        migrations.DeleteModel(
            name='OrganRequestForm',
        ),
        migrations.DeleteModel(
            name='OrganUser',
        ),
    ]
